/*
引用与返回值
*/

//#include<iostream>
//using namespace std;
//
//int& Fun()
//{
//
//	int a = 12;
//	return a;
//}//引用类型的函数，其返回值为一个引用
//
//int main()
//{
//	/*
//	
//	引用与返回值：
//		如果声明一个返回值为引用类型的函数，在使用的时候，要注意不要引用局部变量
//		Fun()函数中的a，在函数运行结束之后就会被释放，为局部变量，因此在主函数调用的时候，b引用指向了a，指向的空间就是一个非法空间，出现问题
//		所以要避免引用局部变量
//	
//	*/
//	int& b = Fun();
//	cout << b << endl;
//	//warning C4172: 返回局部变量或临时变量的地址: a
//
//	/*
//	
//	引用与指针的区别：
//		1.引用声明必须要初始化，但是指针不用
//		2.引用在声明之后，就不能重复进行引用了，但是指针可以不断地更改指向的空间
//		3.引用不占用存储空间，指针占用空间
//		4.引用效率更高，指针是间接操作（但是差距可以忽略不计）
//		5.引用更安全，指针可以偏移
//		6.指针的使用更加灵活，间接操作地址，而且更通用，在C与C++中均可以运行
//	
//	&的三种作用：
//		1.变量声明时添加，表示声明了引用
//		2.变量前加&，表示取地址
//		3.数字&数字，表示位运算
//
//	*/
//
//
//	system("pause");
//	return 0;
//}