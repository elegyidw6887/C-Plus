/*
内联函数的基础
*/

//#include<iostream>
//using namespace std;
//inline void Fun();
//
//inline void Fun()
//{
//	cout << "Im a inline Function!" << endl;
//}
//
//int main()
//{
//	/*
//	
//	内联函数
//		作用：
//			用相应的代码来代替调用
//		与常规调用的区别：
//			代码的运行速度比调用快，因此省去了跳转的过程
//			运行速度快的代价是要占用更多的内存
//		函数声明：
//			在函数的声明与定义时添加inline前缀
//		注意：
//			在将函数定义为内联函数的时候，是否会真正按照内联函数来处理，要根据编译器的特性来
//			1.函数体过大，或者过于复杂
//			2.递归函数
//			以上两种情况编译器会将内联函数当作普通函数来处理
//	
//	*/
//	Fun();
//
//
//	system("pause");
//	return 0;
//}