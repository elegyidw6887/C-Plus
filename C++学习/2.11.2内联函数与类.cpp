/*
内联函数与类
*/

//#include<iostream>
//using namespace std;
//
//#define MUL(x) x*x
////关于宏的结尾是否使用分号，宏与调用两处存在一个分号即可
//
//inline void Fun(int i)
//{
//	cout << i * i << endl;
//}
//
//class CExample
//{
//public:
//
//	int a;
//
//	void Fun()
//	{
//		a = 23;
//		cout << a << endl;
//	}//由于类的特性，次函数为内联函数
//
//};
//
//int main()
//{
//	/*
//	
//	内联函数
//		内联函数与宏的对比：
//			由于宏的本身单纯替换的特性，内联函数要比宏更加方便
//		内联函数与类：
//			类内定义的函数（常规函数）默认为内联函数
//			如果声明在类内，定义在类外，则与正常函数相同
//		内联函数与头文件：
//			如果要使用内联函数，则要将函数的定义写在头文件中（常规函数只在头文件中书写声明）
//	
//	*/
//	cout << MUL(23);
//	cout << '\n';
//	Fun(25);
//
//	system("pause");
//	return 0;
//}